(window.webpackJsonp=window.webpackJsonp||[]).push([[337],{408:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),o=n(7),r=(n(0),n(741)),s={id:"customizingComponents",title:"Customising Components"},i={unversionedId:"customizingComponents",id:"customizingComponents",isDocsHomePage:!1,title:"Customising Components",description:"Theme customisation is at the heart of NativeBase. Using NativeBase's extendTheme function, we can customise components.",source:"@site/docs/customizingComponents.md",slug:"/customizingComponents",permalink:"/next/customizingComponents",editUrl:"https://github.com/nativebase/website/tree/main/docs/customizingComponents.md",version:"current",sidebar:"componentsSidebar",previous:{title:"Customising Fonts",permalink:"/next/customizingFonts"},next:{title:"Making components dark mode compatible",permalink:"/next/darkMode"}},c=[{value:"Basic",id:"basic",children:[{value:"Difference between baseStyle and defaultProps?",id:"difference-between-basestyle-and-defaultprops",children:[]}]},{value:"Customizing Base Style",id:"customizing-base-style",children:[]},{value:"Adding Variants",id:"adding-variants",children:[]}],l={toc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Theme customisation is at the heart of NativeBase. Using NativeBase's ",Object(r.b)("inlineCode",{parentName:"p"},"extendTheme")," function, we can customise components."),Object(r.b)("p",null,"Components can be customised by overriding baseStyle/defaultProps or adding a new variant."),Object(r.b)("p",null,"Let's customise a Button component to include rounded borders and red colorScheme."),Object(r.b)("h2",{id:"basic"},"Basic"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"import React from 'react';\nimport { NativeBaseProvider, extendTheme } from 'native-base';\n\nexport default function () {\n  const theme = extendTheme({\n    components: {\n      Button: {\n        // Can simply pass default props to change default behaviour of components.\n        baseStyle: {\n          rounded: 'md',\n        },\n        defaultProps: {\n          colorScheme: 'red',\n        },\n      },\n      Heading: {\n        // Can pass also function, giving you access theming tools\n        baseStyle: ({ colorMode }) => {\n          return {\n            color: colorMode === 'dark' ? 'red.300' : 'blue.300',\n            fontWeight: 'normal',\n          };\n        },\n      },\n    },\n  });\n  return (\n    <NativeBaseProvider theme={theme}>{/* components */}</NativeBaseProvider>\n  );\n}\n")),Object(r.b)("p",null,"As shown above, we can customize components by passing the ",Object(r.b)("strong",{parentName:"p"},"components")," object with the ",Object(r.b)("strong",{parentName:"p"},"key")," being the ",Object(r.b)("strong",{parentName:"p"},"name")," of the ",Object(r.b)("strong",{parentName:"p"},"component"),". Whereas you set ",Object(r.b)("inlineCode",{parentName:"p"},"defaultProps")," or ",Object(r.b)("inlineCode",{parentName:"p"},"baseStyle")," to customize the components."),Object(r.b)("h3",{id:"difference-between-basestyle-and-defaultprops"},"Difference between baseStyle and defaultProps?"),Object(r.b)("h4",{id:"base-style"},"Base Style"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"As the name suggests, it's used to define the base style of a component."),Object(r.b)("li",{parentName:"ul"},"Base style can be a function or a plain object. Use function if you want to get access to defaultProps, current colorMode (light/dark) and theme object.")),Object(r.b)("p",null,"Take a look at an ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/GeekyAnts/NativeBase/blob/v3-pre-beta/src/theme/components/button.ts#L5"}),"example here")),Object(r.b)("h4",{id:"default-props"},"Default Props"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Default props can be used to initialize props of a component."),Object(r.b)("li",{parentName:"ul"},"For e.g. You have a Button component and it has 2 variants. i.e. outline, solid. You can use it like.")),Object(r.b)("p",null,"Take a look at an ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/GeekyAnts/NativeBase/blob/v3-pre-beta/src/theme/components/button.ts#L201"}),"example here")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Button variant="ghost">\n<Button variant="outline">\n\n\n// What variant should it pick if it\'s not passed?\n<Button />\n')),Object(r.b)("p",null,"When variant in defaultProps is ",Object(r.b)("inlineCode",{parentName:"p"},"solid")," the above button will use solid variant."),Object(r.b)("h2",{id:"customizing-base-style"},"Customizing Base Style"),Object(r.b)("p",null,"You can specify the base style of the component and use it across project."),Object(r.b)("div",{className:"snack-player","data-snack-name":"Customizing BaseStyle","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%20Text%2C%20NativeBaseProvider%2C%20Center%2C%20extendTheme%20%7D%20from%20'native-base'%3B%0A%0Aexport%20default%20function%20()%20%7B%0A%20%20const%20theme%20%3D%20extendTheme(%7B%0A%20%20%20%20components%3A%20%7B%0A%20%20%20%20%20%20Text%3A%20%7B%0A%20%20%20%20%20%20%20%20baseStyle%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20color%3A%20'emerald.400'%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20defaultProps%3A%20%7B%20size%3A%20'lg'%20%7D%2C%0A%20%20%20%20%20%20%20%20sizes%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20xl%3A%20%7B%20fontSize%3A%20'64px'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20lg%3A%20%7B%20fontSize%3A%20'32px'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20md%3A%20%7B%20fontSize%3A%20'16px'%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20sm%3A%20%7B%20fontSize%3A%20'12px'%20%7D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D)%3B%0A%20%20return%20(%0A%20%20%20%20%3CNativeBaseProvider%20theme%3D%7Btheme%7D%3E%0A%20%20%20%20%20%20%3CCenter%20flex%3D%7B1%7D%3E%0A%20%20%20%20%20%20%20%20%3CText%3ENativeBase%3C%2FText%3E%0A%20%20%20%20%20%20%3C%2FCenter%3E%0A%20%20%20%20%3C%2FNativeBaseProvider%3E%0A%20%20)%3B%0A%7D%0A","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy","data-snack-dependencies":"react-is,expo-font,native-base@3.0.0-next.40,styled-system,expo-constants,react-native-web,react-native-safe-area-context,react-native-svg,styled-components,@expo/vector-icons,expo-linear-gradient"}),Object(r.b)("h2",{id:"adding-variants"},"Adding Variants"),Object(r.b)("p",null,"You can also add the variants to the components and use it across project."),Object(r.b)("div",{className:"snack-player","data-snack-name":"Customizing Variants","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%0A%20%20NativeBaseProvider%2C%0A%20%20Button%2C%0A%20%20extendTheme%2C%0A%20%20Center%2C%0A%20%20VStack%2C%0A%7D%20from%20'native-base'%3B%0A%0Aexport%20default%20function%20()%20%7B%0A%20%20const%20theme%20%3D%20extendTheme(%7B%0A%20%20%20%20components%3A%20%7B%0A%20%20%20%20%20%20Button%3A%20%7B%0A%20%20%20%20%20%20%20%20variants%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20rounded%3A%20(%7B%20colorScheme%20%7D%3A%20any)%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20bg%3A%20%60%24%7BcolorScheme%7D.500%60%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20rounded%3A%20'full'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D%2C%0A%20%20%7D)%3B%0A%0A%20%20return%20(%0A%20%20%20%20%3CNativeBaseProvider%20theme%3D%7Btheme%7D%3E%0A%20%20%20%20%20%20%3CCenter%20flex%3D%7B1%7D%3E%0A%20%20%20%20%20%20%20%20%3CVStack%20space%3D%7B2%7D%3E%0A%20%20%20%20%20%20%20%20%20%20%3CButton%20colorScheme%3D%22emerald%22%3EDefault%20Button%3C%2FButton%3E%0A%20%20%20%20%20%20%20%20%20%20%3CButton%20colorScheme%3D%22emerald%22%20variant%3D%22rounded%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20Rounded%20Button%0A%20%20%20%20%20%20%20%20%20%20%3C%2FButton%3E%0A%20%20%20%20%20%20%20%20%3C%2FVStack%3E%0A%20%20%20%20%20%20%3C%2FCenter%3E%0A%20%20%20%20%3C%2FNativeBaseProvider%3E%0A%20%20)%3B%0A%7D%0A","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy","data-snack-dependencies":"react-is,expo-font,native-base@3.0.0-next.40,styled-system,expo-constants,react-native-web,react-native-safe-area-context,react-native-svg,styled-components,@expo/vector-icons,expo-linear-gradient"}),Object(r.b)("br",null),Object(r.b)("p",null,"NativeBase ships with default styles for each components. ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/GeekyAnts/NativeBase/tree/v3-pre-beta/src/theme/components"}),"You can find it here")))}p.isMDXComponent=!0},741:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,b=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?o.a.createElement(b,i(i({ref:t},l),{},{components:n})):o.a.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<r;l++)s[l]=n[l];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);